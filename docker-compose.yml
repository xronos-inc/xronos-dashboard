# SPDX-FileCopyrightText: Â© 2024 Xronos Inc.
# SPDX-License-Identifier: BSD-3-Clause

# name: xronos-dashboard


services:
  influxdb:
    image: influxdb:latest
    pull_policy: if_not_present
    container_name: influxdb
    hostname: influxdb
    networks:
      - xronos-dashboard
    ports:
      - "8086:8086/tcp"
    env_file:
      - influxdb/influx.env
    volumes:
      - influxdb-data:/var/lib/influxdb2
    deploy:
      restart_policy:
        condition: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  grafana:
    image: grafana/grafana:latest
    pull_policy: if_not_present
    container_name: grafana
    hostname: grafana
    networks:
      - xronos-dashboard
    ports:
      - "3000:3000"
    depends_on:
      influxdb:
        condition: service_healthy
    links:
      - influxdb
    env_file:
      - grafana/grafana.env
    environment:
      GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH: /var/lib/grafana/dashboards/tracing.json
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/extended:/dashboards
    deploy:
      restart_policy:
        condition: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  telegraf:
    image: telegraf:latest
    pull_policy: if_not_present
    container_name: telegraf
    hostname: telegraf
    networks:
      - xronos-dashboard
    ports:
      - "8186:8186"     # TCP over http
      - "8094:8094/udp" # UDP socket
    depends_on:
      influxdb:
        condition: service_healthy
    links:
      - influxdb
    env_file:
      - ./influxdb/influx.env
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    deploy:
      restart_policy:
        condition: always
    healthcheck:
      test: ["CMD-SHELL", "curl -i -X POST http://0.0.0.0:8186/telegraf --data-binary \"telegraf,heartbeat=healthcheck ping=true $(date +%s%N)\""]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  xronos-dashboard:
    name: xronos-dashboard
    driver: bridge

volumes:
  influxdb-data:
  grafana-data:
